<style>
    .activity {
        border-top: thin #dedede solid;
        padding: .25em .5em;
        margin: .5em 1em;
    }
    .timesheet {
        margin-left: 1em;
        border-bottom: thin #dedede dotted;
        }
        .timesheet.draft {
            opacity: .5;
            font-size: .9em;
        }
</style>
<section class="container">
    <?= $this->url('contract/show', ['id'=>'ACTIVITYID']) ?>
    <div id="declarers"></div>

</section>
<script>
require(['vue', 'mm'], function(Vue, moment){

    // Correspondance entre les statuts et les descriptifs conrespondants
    const textStatus = {
        "draft": "Ce créneau n'a pas encore été soumis par le déclarant.",
        "send": "Ce créneau a été soumis et est en attente validation.",
        "reject": "Ce créneau a été rejeté.",
        "valid": "Ce créneau a été validé",
    };

    const urls = {
        "activity": "<?= $this->url('contract/show', ['id'=>'IDACTIVITY']) ?>",
        "activity-timesheet":  "<?= $this->url('timesheet/validation', ['idactivity'=>'IDACTIVITY']) ?>",
        "person": "<?= $this->url('person/show', ['id'=>'IDACTIVITY']) ?>",
        "person-usurpation": "<?= $this->url('timesheet/usurpation', ['idperson'=>'IDPERSON', 'idactivity' => 'IDACTIVITY']) ?>",
    };

    let timesheet = {
        props: ['timesheet'],
        template: `
<article class="timesheet" :class="timesheet.status"  :data-tooltip="textStatus">
<i class="icon" :class="timesheet.status"></i>
<strong>{{ timesheet.workpackage_code }}</strong> - {{ timesheet.start | day }} ({{ duration }})
<small>{{ textStatus }}</small>
</article>`,
        filters: {
            day(date){
                return moment(date).format('D MMMM YYYY');
            }
        },
        computed: {
            textStatus(){
                return this.timesheet.status + ' : ' + textStatus[this.timesheet.status];
            },

            duration(){
                let s = moment(this.timesheet.start),
                    e = moment(this.timesheet.end),
                    m = e.diff(s, 'minutes'),
                    minutes = m%60,
                    heures = (m - minutes)/60;



                return heures +"'" + minutes;
            }
        }
    };

    let activity = {
        props: ['activity'],
        components: {
            'timesheet': timesheet
        },
        template: `
<article class="activity">
    <h4>
        <i class="icon-cube"></i>
        {{ activity.text }}
         ~
        <a :href="url" class="link small" role="link" data-tooltip="Ouvrir la fiche de cette activité">
            <i class="icon-search-outline"></i>
        </a>
    </h4>
    <section>
        <timesheet v-for="timesheet in activity.timesheets" :timesheet="timesheet" />
    </section>
</article>`,
        computed:{
            url(){
                return urls.activity.replace('IDACTIVITY', this.activity.id);
            }
        }
    };

    new Vue({
        components: {
            'activity': activity
        },
        el: "#declarers",
        data: <?= json_encode($datas) ?>,
        template: `
<section>
    <h2>Déclarants</h2>
    <article v-for="person in persons" class="card">
        <h3>
            <span class="displayname"><i class="icon-user"></i>{{ person.displayname }}</span>
            <em v-if="person.affectation"> ({{ person.affectation}})</em>
            <small><i class="icon-mail"></i>{{ person.email }}</small>
        </h3>
        <activity :activity="activity" v-for="activity in person.declarations" />
    </article>
</section>`
    })
});
</script>