<!-- <link rel="stylesheet" href="<?= $this->basePath() . '/css/icons/css/fontello.css' ?>" /> -->
<link rel="stylesheet" href="<?= $this->basePath() . '/js/modules/unicaen/dist/css/calendar.css' ?>" />
<link rel="stylesheet" href="<?= $this->basePath() . '/js/modules/unicaen/dist/css/datepicker.css' ?>" />


<div class="container">

    <?php
    $label = sprintf("Validation pour %s", $activity);
    $crenaux = [];
    $colorPersons = [];
    $owners = [];
    $color = 0;

    /** @var \Oscar\Entity\WorkPackagePerson $wpd */
    foreach( $declarants as $wpd ){
        if( !array_key_exists($wpd->getPerson()->getId(), $colorPersons) ){
            $colorPersons[$wpd->getPerson()->getId()] = $color++;
        }
        if( !array_key_exists($wpd->getPerson()->getId(), $owners) ){
            $owners[$wpd->getPerson()->getId()] = $wpd->getPerson()->toJson();
        }
    }

    /** @var \Oscar\Entity\WorkPackage $workpackage */
    foreach( $activity->getWorkPackages() as $wpd ){
        $crenaux[((string)$wpd)] = [
            'label'         => (string)$wpd,
            'idactivity'    => $activity->getId(),
            'code'          => $wpd->getCode(),
            'idworkpackage' => $wpd->getId(),
        ];
    }
    ?>

    <div id="app" class="mode-validation">
        <calendar with-owner="false" :create-new="false" calendar-label="<?= $label ?>"></calendar>
    </div>
</div>

<script>
    require(['vue', 'vue-resource', 'calendar'], function(Vue, VueResource, Calendar){

        Vue.use(VueResource);

        Vue.http.options.emulateJSON = true;
        Vue.http.options.emulateHTTP = true

        var owners = <?= json_encode(array_values($owners)) ?>;
        var customDatas = <?= json_encode($crenaux) ?>;
        console.log(customDatas);
        var mixins = {
            methods: {
                restUrl(){
                    return '<?= $this->url('timesheet/validation', ['idactivity' => $activity->getId() ]) ?>'
                },
                useOwner(){ return true },
                ownersList(){
                    return owners
                },
                customDatas(){
                    return customDatas;
                }
            }
        }

        Calendar.mixins = [
            mixins
        ];

        var vue = new Vue({
            el: "#app",
            components: {
                'calendar': Calendar
            }
        });
    })
</script>

<?php /**
<div class="test">
    <?php if( $activity ): ?>
        <?php foreach( $activity->getWorkPackages() as $workPackage ): ?>
        <?= $workPackage ?>
        <?php endforeach; ?>
    <?php endif; ?>
</div>

<div class="container">
    <h1 class="title-with-small">
        <small>DÃ©claration pour </small>
        <a href="<?= $this->url('contract/show', ['id' => $activity->getId()]) ?>">
            <?= $activity->getProject()->getAcronym() ?>
            / <?= $activity ?>
        </a>
    </h1>

    <div id="app">
        <calendar :with-owner="true" :createNew="false"></calendar>
    </div>
</div>

<script>
    require(['vue', 'vue-resource', 'moment-timezone', 'calendar'], function(Vue, VueResource, moment, Calendar){

        Vue.use(VueResource);

        Vue.http.options.emulateJSON = true;
        Vue.http.options.emulateHTTP = true

        var mixins = {
            methods: {
                restUrl(){
                    return '<?= $this->url('timesheet/validation', ['idactivity' => $activity->getId() ]) ?>'
                },
                useOwner(){ return true }
            }
        }

        Calendar.mixins = [
            mixins
        ];

        var vue = new Vue({
            el: "#app",
            components: {
                'calendar': Calendar
            }
        });
    })
</script>
<?php /****/ ?>
