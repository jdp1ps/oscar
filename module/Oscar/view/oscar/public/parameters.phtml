<div class="container">
    <h1>
        <i class="icon-cog"></i> Paramètres
    </h1>


    <form action="">
        <div class="row">

            <div class="col-md-6">
                <h3>
                    <i class="icon-user"></i>
                    Informations personnelles
                </h3>

                <p class="help">
                    Les informations présentent ici sont issues du système d'information. En cas d'erreur, n'hesitez pas à prendre contact avec l'administrateur Oscar.
                </p>

                <?php if( $person ): ?>
                    <div class="row">
                        <div class="col-md-3">
                            <img src="//www.gravatar.com/avatar/<?= md5($person->getEmail()) ?>?s=250"
                                 style="border-radius: 20px; width: 100%"
                                 alt="" />
                        </div>
                        <div class="col-md-9">
                            <p class="text-highlight text-small">
                                Dernière mise à jour :
                                <?php if($person->getDateSyncLdap()): ?>
                                    <strong class="text-success">
                                        <i class="icon-ok-circled"></i>
                                        <?= $this->moment($person->getDateSyncLdap()) ?>
                                        <span class="text-light">(<?= $this->moment($person->getDateSyncLdap())->since() ?>)</span>
                                    </strong>
                                <?php else: ?>
                                    <i class="icon-cancel-circled-outline"></i>
                                    <em>Jamais</em>
                                <?php endif; ?>
                                <br/>
                                Créé le <time><?= $this->moment($person->getDateCreated())->full() ?></time>
                            </p>

                            <table class="table table-bordered small">
                                <tbody>
                                <tr>
                                    <th>#ID</th>
                                    <td><?= $person->getId() ?></td>
                                </tr>
                                <tr>
                                    <th>displayname</th>
                                    <td><?= $person->getDisplayName() ?></td>
                                </tr>
                                <tr>
                                    <th>Prénom</th>
                                    <td><?= $person->getFirstName() ?></td>
                                </tr>
                                <tr>
                                    <th>Nom</th>
                                    <td><?= $person->getLastname() ?></td>
                                </tr>
                                <tr>
                                    <th>email</th>
                                    <td><?= $person->getEmail() ?></td>
                                </tr>

                                <tr>
                                    <th>Statut</th>
                                    <td><?= $person->getLdapStatus() ?></td>
                                </tr>

                                <tr>
                                    <th>Localisation (LDAP)</th>
                                    <td><?= $person->getLdapSiteLocation() ?></td>
                                </tr>
                                <tr>
                                    <th>Affectation (LDAP)</th>
                                    <td><?= $person->getLdapAffectation() ?></td>
                                </tr>
                                <tr>
                                    <th>phone</th>
                                    <td><?= $person->getPhone() ?></td>
                                </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <h3>
                        <i class="icon-building-filled"></i>
                        Référents
                    </h3>

                    <section class="data-list">
                        <small>Les <strong>déclarants</strong> sont les personnes pour lesquelles vous devrez valider les déclarations Hors-Projet.</small>
                        <div class="data-row card">
                            <div class="data-label" style="flex: 1; white-space: normal">
                                <strong>Déclarant(s)</strong><br>
                            </div>
                            <div class="data-value"  style="flex: 4">
                                <?php if( $subordinates ): ?>
                                <?php foreach($subordinates as $person): ?>
                                    <article>
                                        <?= $person ?>
                                    </article>
                                <?php endforeach; ?>
                                <?php endif; ?>
                            </div>
                        </div>

                        <small>Les <strong>référents</strong> sont les personnes qui sont habilitées à valider vos déclaration Hors-Projet.</small>
                        <div class="data-row card">
                            <div class="data-label" style="flex: 1; white-space: normal">
                                <strong>Référent(s)</strong><br>
                            </div>
                            <div class="data-value"  style="flex: 4">
                                <?php if( $managers ): ?>
                                    <?php foreach($managers as $person): ?>
                                        <article>
                                            <?= $person ?>
                                        </article>
                                    <?php endforeach; ?>
                                <?php endif; ?>
                            </div>
                        </div>
                    </section>

                    <h3>
                        <i class="icon-building-filled"></i>
                        Organisations
                    </h3>

                    <?php foreach ($person->getOrganizations() as $organizationPerson): ?>
                    <article class="card xs">
                        <h4 class="card-title">
                            <i><?= $organizationPerson->getOrganization() ?></i>
                            <strong><?= $organizationPerson->getRole() ?></strong>
                        </h4>
                    </article>
                    <?php endforeach; ?>
                <?php else: ?>
                    <p class="alert alert-warning">
                        Votre compte n'est pas associé à une personne dans les activités
                    </p>
                <?php endif; ?>

            </div>
            <div class="col-md-6">
                <h3><i class="icon-calendar"></i>
                    Mode de déclaration</h3>

                <div id="declarationsHours"></div>

                <pre>TEST:
                <?php var_dump($this->grant()->privilege(\Oscar\Provider\Privileges::PERSON_SHOW_SCHEDULE)) ?>
                </pre>
                <?php if($this->grant()->privilege(\Oscar\Provider\Privileges::PERSON_SHOW_SCHEDULE)): ?>
                <h3><i class="icon-clock"></i>
                    Répartition Horaire</h3>
                <div id="schedule"></div>
                <script>
                    require(['vue', 'vue-resource', 'mm', 'PersonSchedule'], function(Vue, VueResource, moment, PersonSchedule){
                        Vue.use(VueResource);
                        Vue.filter('heures', function(v){
                            var heure = Math.floor(v);
                            var minutes = (v-heure)*60;
                            return heure +':' +minutes;
                        });
                        new Vue({
                            'el': '#schedule',
                            render: function(h){
                                return h(PersonSchedule.default, { props: {urlapi:'?a=schedule', editable: <?= $scheduleEditable ? 'true' : 'false' ?>}})
                            }
                        })
                    });
                </script>
                <?php endif; ?>



                <h3><i class="icon-history"></i>
                    Fréquence des envois</h3>

                <?php if( $forceSend ): ?>
                <p class="help">
                    Vous ne recevrez des courriels que si vous avez des notifications non-lues dans Oscar.
                    Vous ne pouvez pas vous désinscrire des créneaux marqués avec un <i class="icon-lock"></i>.
                </p>
                <?php endif; ?>

                <div class="uc-cron" id="parameters-nf">

                </div>

            </div>
        </div>
    </form>
    <style>

    </style>
</div>
<script>
    require(['vue', 'vue-resource'], function(Vue, VueResource){



        Vue.use(VueResource);
        Vue.http.options.emulateJSON = true;
        Vue.http.options.emulateHTTP = true;
        new Vue({
            data: {
                declarationsHours: <?= $declarationsHours ? 'true':'false' ?>,
                declarationsHoursOverwrite: <?= $declarationsHoursOverwriteByAuth ? 'true' : 'false'?>
            },
            el: '#declarationsHours',
            template: `<div>
                <section>
                    <p v-if="declarationsHoursOverwrite">
                        Le mode de déclaration est fixé sur <strong>{{ declarationsHours ? 'en heure' : 'en poucentage jour' }}</strong><br>
                        <a @click="switchDeclarationMode()" href="#" class="btn btn-primary">
                            {{ declarationsHours ? 'utiliser la déclaration en pourcentage jour' : 'utiliser la déclaration en heure' }}
                        </a>
                    </p>
                    <p v-else class="alert alert-info">
                        Le mode de déclaration est fixé sur <strong>{{ declarationsHours ? 'en heure' : 'en poucentage jour' }}</strong>
                    </p>
                </section>
                </div>`,
            methods: {
                switchDeclarationMode: function(){
                    this.declarationsHours = !this.declarationsHours;
                    var formData = new FormData();
                    formData.append('declarationsHours', this.declarationsHours ? 'on' : 'off');
                    formData.append('action', 'declaration-mode');

                    this.$http.post('', formData)
                        .then(
                            success => {
                                console.log('OK');
                            },
                            fail => {
                                console.log(fail);
                            }
                        ).then( (foo) => {
                    });
                }
            }
        });

        new Vue({
            data: {
                'loading': false,
                'frequency': <?= array_key_exists('frequency', $parameters) ? json_encode($parameters['frequency']) : '[]' ?>,
                'forced': <?= json_encode($forceSend) ?>,
                'days': ['Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam', 'Dim'],
                'hours': ['4', '6', '8', '10', '12', '14', '16', '18', '20', '22'],
                'errors' : null,
                'changed': false
            },
            el: '#parameters-nf',
            template: `<form action="" @submit.prevent="save">
                    <div class="alert alert-danger" v-if="errors">{{ errors }}</div>
                    <input type="hidden" :value="frequency.join(',')" name="frequency" />
                    <table class="uc-frequency">
                        <thead class="heading">
                            <tr>
                                <th>&nbsp;</th>

                                <th class="hours" v-for="day in days"  @click="toogleDay(day)">
                                    {{ day }}
                                </th>
                            </tr>
                        </thead>
                        <tbody class="content">
                            <tr class="line" v-for="hour in hours">
                                <th class="hours-label" @click="toogleHour(hour)">
                                    {{ hour }}:00
                                </th>

                                <td class="hours-selector"
                                    :class="{ 'selected': frequency.indexOf(day+hour) >= 0, 'forced': isForced(day+hour) }"
                                    v-for="day in days"
                                    :title="isForced(day+hours)?'Vous ne pouvez pas vous désinscrire de ce créneau': ''"
                                    v-if="!isForced(days)"
                                    @click="toogleFrequency(day+hour)">
                                    <i class="icon-lock" v-if="isForced(day+hour)"></i>
                                    <i class="icon-ok-circled" v-else></i>
                                </td>

                            </tr>
                        </tbody>
                    </table>
                    <br>
                    <button type="submit" :class="{ 'disabled': loading || !changed, 'btn-primary': changed }" class="btn btn-default btn-save">
                        <i class="icon-floppy" v-if="!loading"></i>
                        <i class="icon-spinner animate-spin" v-if="loading"></i>
                    Enregistrer</button>
                </form>`,

            watch: {
                frequency(){
                    this.changed = true;
                }
            },

            methods: {
                isForced(str){
                    return this.forced.indexOf(str) >= 0
                },


                /** Retourne TRUE si des féquences sont configurés le jour D */
                hasFrequencyInDay(d){
                    for( var i=0; i<this.frequency.length; i++ ){
                        if( this.frequency[i].indexOf(d) == 0 )
                            return true
                    }
                    return false;
                },

                /** Retourne TRUE si des féquences sont configurés à l'heure H */
                hasFrequencyInHour(h){
                    for( var i=0; i<this.frequency.length; i++ ){
                        if( this.frequency[i].indexOf(h) == 3 )
                            return true
                    }
                    return false;
                },

                removeFrequency(f){
                    var index = this.frequency.indexOf(f);
                    if( index >= 0 )
                        this.frequency.splice(index, 1);
                },

                toogleFrequency( f ){
                    if (this.isForced(f)) {
                        return;
                    }
                    if( this.frequency.indexOf(f) < 0 )
                        this.frequency.push(f);
                    else
                        this.frequency.splice(this.frequency.indexOf(f), 1);
                },

                toogleDay( d ){
                    // On détermine si des créneaux sont selectionnés ?
                    var remove = this.hasFrequencyInDay(d);
                    for( var i=0; i<this.hours.length; i++ ){
                        if( remove )
                            this.removeFrequency(d+this.hours[i]);
                        else
                            this.frequency.push(d+this.hours[i]);
                    }
                },

                toogleHour( h ){
                    var remove = this.hasFrequencyInHour(h);

                    for( var i=0; i<this.days.length; i++ ){
                        if( remove )
                            this.removeFrequency(this.days[i]+h);
                        else
                            this.frequency.push(this.days[i]+h);
                    }
                },

                save(){
                    this.loading = true;

                    var datas = new FormData();
                    console.log(this.frequency);
                    datas.append('action', 'frequency');
                    datas.append('frequency', this.frequency.join(','));

                    this.$http.post('', datas)
                        .then(
                            success => {
                                console.log('OK');
                            },
                            fail => {
                                console.log(fail);
                                this.errors = "Erreur : " + fail.body;
                            }
                        ).then( (foo) => {
                            this.loading = false;
                            this.changed = false;
                        });
                }
            }
        })
    })
</script>
